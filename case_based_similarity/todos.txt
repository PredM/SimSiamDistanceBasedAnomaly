
Implementation
* Implement the other case handler classes, which use FFNNs and or encoding at startup (fast...)
    * After the simplest version was successfully tested
    * Implement encoding for CaseSpecificDataset
    * Use multiple inheritance to avoid code duplicates if necessary and possible
* Fix SNNs
    * Check if inference is working correctly
    * Remove if test from draw pair
* Fix real time classification
    * First ensure new implementation of the SNNs is working
    * Then test CBS
    * Should also use self.classes_case_base to get the label of max_sim
    * Preprocessing must be changed in the same way like the SNNs

Merge with master
* After merge: Rename snn.subnet to encoder
* Remove .astype('float32') wherever possible

Future features:
* Include multi-gpu-usage for cbs
    * In a way that each case base handler uses one
    * Ensure these work parallel
* Use individual hyper parameters for each case_handler
* Change loading of CaseSpecificDataset
    * Load a FullDataset in CBS
    * Create CaseSpecificDatasets with that one instead of reloading from files every time
* Use os.path.join for all operation, including config
* Store configuration when saving models
    * Those configs that are must match safed model
        * e.g. used cases